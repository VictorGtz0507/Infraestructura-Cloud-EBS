service: ebs-online-platform

provider:
  name: aws
  runtime: nodejs18.x
  region: us-east-1
  stage: ${opt:stage, 'dev'}
  environment:
    NODE_ENV: ${self:provider.stage}
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - cognito-idp:*
            - s3:*
            - ses:*
            - sns:*
            - rds:*
          Resource: "*"

plugins:
  - serverless-offline
  - serverless-iam-roles-per-function

custom:
  serverless-offline:
    httpPort: 4000
    noPrependStageInUrl: false

functions:
  health:
    handler: backend/handlers/health.handler
    events:
      - http:
          path: /health
          method: get
          cors:
            origin: 'http://localhost:5173'
            headers:
              - Content-Type
              - Authorization
            allowCredentials: true
      - http:
          path: /health
          method: post
          cors:
            origin: 'http://localhost:5173'
            headers:
              - Content-Type
              - Authorization
            allowCredentials: true

  # Courses endpoints
  get-courses:
    handler: backend/handlers/courses.getCourses
    events:
      - http:
          path: /courses
          method: get
          cors:
            origin: 'http://localhost:5173'
            headers:
              - Content-Type
              - Authorization
            allowCredentials: true

  create-course:
    handler: backend/handlers/courses.createCourse
    events:
      - http:
          path: /courses
          method: post
          cors:
            origin: 'http://localhost:5173'
            headers:
              - Content-Type
              - Authorization
            allowCredentials: true

  get-course-by-id:
    handler: backend/handlers/courses.getCourseById
    events:
      - http:
          path: /courses/{id}
          method: get
          cors:
            origin: 'http://localhost:5173'
            headers:
              - Content-Type
              - Authorization
            allowCredentials: true

  update-course:
    handler: backend/handlers/courses.updateCourse
    events:
      - http:
          path: /courses/{id}
          method: put
          cors:
            origin: 'http://localhost:5173'
            headers:
              - Content-Type
              - Authorization
            allowCredentials: true

  delete-course:
    handler: backend/handlers/courses.deleteCourse
    events:
      - http:
          path: /courses/{id}
          method: delete
          cors:
            origin: 'http://localhost:5173'
            headers:
              - Content-Type
              - Authorization
            allowCredentials: true

  # Users endpoints
  get-users:
    handler: backend/handlers/users.getUsers
    events:
      - http:
          path: /users
          method: get
          cors:
            origin: 'http://localhost:5173'
            headers:
              - Content-Type
              - Authorization
            allowCredentials: true

  create-user:
    handler: backend/handlers/users.createUser
    events:
      - http:
          path: /users
          method: post
          cors:
            origin: 'http://localhost:5173'
            headers:
              - Content-Type
              - Authorization
            allowCredentials: true

  get-user-by-id:
    handler: backend/handlers/users.getUserById
    events:
      - http:
          path: /users/{id}
          method: get
          cors:
            origin: 'http://localhost:5173'
            headers:
              - Content-Type
              - Authorization
            allowCredentials: true

  update-user:
    handler: backend/handlers/users.updateUser
    events:
      - http:
          path: /users/{id}
          method: put
          cors:
            origin: 'http://localhost:5173'
            headers:
              - Content-Type
              - Authorization
            allowCredentials: true

  delete-user:
    handler: backend/handlers/users.deleteUser
    events:
      - http:
          path: /users/{id}
          method: delete
          cors:
            origin: 'http://localhost:5173'
            headers:
              - Content-Type
              - Authorization
            allowCredentials: true